swagger: "2.0"
info:
  title: FM-concept
  description: FM-concept
  version: 1.0.0
schemes:
  - https
  - http
host: fm-concept.customapp.tech
basePath: /api
produces:
  - application/json
consumes:
  - application/json
paths:
  /auth/message:
    post:
      tags:
        - auth
      description: Получение сообщения для авторизации по подписи
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: auth_message_request
          schema:
            $ref: '#/definitions/AuthMessageRequest'
      responses:
        '200':
          description: Сообщение для подписи кошельком
          schema:
            $ref: '#/definitions/AuthMessageResponse'
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/by_signature:
    post:
      tags:
        - auth
      description: Авторизация по подписи
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: auth_by_signature
          schema:
            $ref: '#/definitions/AuthBySignatureRequest'
      responses:
        '200':
          description: Результат авторизации
          schema:
            $ref: '#/definitions/AuthResponse'
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/refresh:
    post:
      tags:
        - auth
      description: Рефреш jwt-токенов в куках.
      produces:
        - application/json
      responses:
        '200':
          description: Результат успешного рефреша
          schema:
            $ref: '#/definitions/AuthResponse'
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - cookieRefreshAuth: []
  /auth/logout:
    post:
      tags:
        - auth
      description: Закрытие текущей сессии пользователя (читать удаление одной пары jwt)
      produces:
        - application/json
      responses:
        '200':
          description: Success response
          schema:
            $ref: '#/definitions/SuccessResponse'
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - cookieAuth: [ ]
  /auth/full_logout:
    post:
      tags:
        - auth
      description: Закрытие всех действующих сессий пользователя (читать удаление всех jwt)
      produces:
        - application/json
      responses:
        '200':
          description: Success response
          schema:
            $ref: '#/definitions/SuccessResponse'
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - cookieAuth: [ ]
  /auth/try:
    post:
      tags:
        - Авторизация
      description: Попытка авторизации с куками
      produces:
        - application/json
      responses:
        200:
          description: Результат успешной авторизации
          schema:
            $ref: '#/definitions/AuthResponse'
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'
  /config:
    get:
      tags:
        - config
      description: Конфиг
      produces:
        - application/json
      responses:
        200:
          description: Конфиг
          schema:
            $ref: '#/definitions/Config'
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'

  /client/dataset/download:
    get:
      tags:
        - client
      description: Выгрузка датасета клиента
      produces:
        - text/csv
      responses:
        200:
          description: Скачивание датасета
          schema:
              type: string
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - cookieAuth: [ ]
  /client/dataset/get:
    get:
      tags:
        - client
      description: получить датасет клиента, ориентироваться по полю dataset в структуре Client. показывать, какая у нас есть инфа
      produces:
        - application/json
      responses:
        200:
          description: Ответ на согласие или отказ от датасета
          schema:
            $ref: '#/definitions/GetClientDatasetResponse'
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - cookieAuth: [ ]
  /client/dataset/agreement:
    post:
      tags:
        - client
      description: Согласие или отказ от датасета
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: req
          schema:
            $ref: '#/definitions/ClientAgreementRequest'
      responses:
        200:
          description: Ответ на согласие или отказ от датасета
          schema:
            $ref: '#/definitions/Client'
        default:
          description: Ошибка
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - cookieAuth: [ ]


definitions:
  AuthRequest:
    type: object
    description: Авторизационный запрос
    required:
    - access_parameter 
    - pass_hash
    properties:
      access_parameter:
        type: string
        description: Логин
      pass_hash:
        type: string
  AuthResponse:
    type: object
    description: Обобщенный ответ на разные запросы авторизации
    properties:
      server_time:
        description: текущее серверное время (timestamp в миллисекундах)
        type: integer
        format: int64
      user:
        $ref: '#/definitions/UserResponse'
  UserResponse:
    type: object
    required:
      - role
    properties:
      role:
        $ref: '#/definitions/UserRole'
      # one of client:
      client:
        $ref: '#/definitions/Client'
  AuthMessageRequest:
    type: object
    description: Запрос получения сообщения для авторизации по подписи
    properties:
      address:
        type: string
        pattern: '^0x[0-9a-fA-F]{40}$'
        description: Адрес пользователя, который хочет авторизоваться
    required:
      - address
  AuthMessageResponse:
    type: object
    description: Ответ на запрос получения сообщения для авторизации по подписи
    properties:
      message:
        type: string
        description: Сообщение для подписи
    required:
      - message
  AuthBySignatureRequest:
    type: object
    description: Запрос авторизации по подписи
    properties:
      address:
        type: string
        pattern: '^0x[0-9a-fA-F]{40}$'
        description: Адрес пользователя
      signature:
        type: string
        description: Подпись
    required:
      - address
      - signature
  ClientAgreementRequest:
    type: object
    description: Запрос согласия или отказа от датасета
    required:
      - agreement
    properties:
      agreement:
        type: boolean
  GetClientDatasetResponse:
    type: object
    properties:
      dataset:
        type: array
        items:
          $ref: '#/definitions/Dataset'


  Dataset:
    type: object
    description: датасет
    properties:
      name:
        type: string
      data:
        type: string
      desc:
        type: string

  Client:
    type: object
    description: Клиент
    required:
      - agreement
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      agreement:
        type: boolean
        description: Согласие на предоставление датасета
      dataset:
        type: boolean
        description: Наличие датасета
      bought:
        type: boolean
        description: Осуществление покупки
      point_balance:
        type: string

  Config:
    description: Конфиг
    type: object
    required:
      - wallet_address
      - dataset_cost
    properties:
      wallet_address:
        description: адрес кошелька, куда переводить нативку для покупки датасета
        type: string
      dataset_cost:
        description: стоимость датасета в децималс
        type: string

  Transaction:
    description: Данные транзакции
    type: object
    required:
      - id
      - state
      - timestamp
    properties:
      id:
        description: id транзакции
        type: string
        pattern: '^0x[0-9a-fA-F]{64}$'
      state:
        $ref: '#/definitions/TransactionState'
      timestamp:
        description: Время транзакции (timestamp в миллисекундах)
        type: integer
        format: int64
  TransactionState:
    description: Состояние транзакции
    type: string
    enum:
      - pending # транзакция взята в пул, но еще не включена в блок
      - confirmed # транзакция исполнена успешно
      - failed #  исполнение транзакции завершилось ошибкой
  UserRole:
    type: string
    description: Роль пользователя
    enum:
      - client
  ErrorResponse:
    type: object
    description: Типовая ошибка
    properties:
      code:
        type: integer
        description: Код ошибки
      message:
        type: string
        description: Сообщение ошибки
      detail:
        type: string
        description: Дополнительные детали
  SuccessResponse:
    type: object
    required: [success]
    description: Типовой запрос для ответа на Post запросы, которые не должны возвращать никаких данных
    properties:
      success:
        type: boolean
securityDefinitions:
  cookieAuth:
    type: apiKey
    name: Cookie
    in: header
    description: cookie with JWT. Name 'access-token'
  cookieRefreshAuth:
    type: apiKey
    name: Cookie
    in: header
    description: cookie with JWT. Name 'refresh-token'

tags:
  - name: auth
  - name: config
  - name: client